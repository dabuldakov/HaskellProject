0 1 4 = 1 1 3   -> 1
1 1 3 = 1 2 2   -> 1
1 2 2 = 2 3 1   -> 2
2 3 1 = 3 5 0   -> 3

 0  1 -3 =  1 -1 -2   - >  1
 1 -1 -2 = -1  2 -1   - > -1
-1  2 -1 =  2 -3  0   - >  2

a0 = 1
a1 = 2
a2 = 3
ak+3 = ak+2 + ak+1 - 2*ak = 3 + 2 - 2*1 = 3
ak+4 = ak+3 + ak+2 - 2*ak+1 = 3 + 3 - 2*2 = 2
ak+5 = ak+4 + ak+3 - 2*ak+2 = 2 + 3 - 2*3 = -1
akn = akn-1 + akn-2 - 2*akn-3

2ak =  ak+1 + ak+2 - ak+3
 ak = (ak+1 + ak+2 - ak+3)/2
 ak = (2 + 3 - 3)/2 = 1

1 2 3 4 = 2 3 3 (3)


ghci> product [6,2,1,2]  
24  

ghci> length [5,4,3,2,1]  
5  

ghci> head [5,4,3,2,1]  
5  

ghci> sum [5,2,1,6,3,2,5,7]  
31  


sum'n'count :: Integer -> (Int, Int)
sum'n'count x | x > 0 = (sum' 0 (show x) dlina, dlina)
sum'n'count x | x < 0 = (sum' 0 (show x) dlina2, dlina2)
sum'n'count x | x == 0 = (1,0)

  where
    dlina =  length (show x)
    dlina2 = length (tail (show x))
    sum' acc x 0 = acc
    sum' acc x n = sum' ((x !! n) + acc) (n-1) 

